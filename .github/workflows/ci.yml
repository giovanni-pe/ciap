name: CI/CD Workflow

on:
  push:
    branches:
      - main  # Ejecuta este flujo en cada push a la rama 'main'

jobs:
  # Job de inicialización
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v2
      
      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Ajusta la versión de Node según tus necesidades
      
      - name: Instalar dependencias
        run: npm install
        working-directory: ${{ github.workspace }}  # Asegura que esté en la raíz del repositorio

  # Job de pruebas
  tests:
    runs-on: ubuntu-latest
    needs: init  # Ejecutar después de 'init'
    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v2

      - name: Ejecutar pruebas
        run: |
          echo "Ejecutando pruebas..."
        working-directory: ${{ github.workspace }}

  # Job de plan de despliegue
  deploy_plan:
    runs-on: ubuntu-latest
    needs: tests  # Ejecutar después de 'tests'
    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v2
      
      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - name: Instalar dependencias
        run: npm install
        working-directory: ${{ github.workspace }}

      - name: Copiar archivo .env
        run: |
          cp ${{ github.workspace }}/variables/.env ${{ github.workspace }}/  # Copia el archivo .env desde la carpeta 'variables' a la raíz del proyecto

  # Job de despliegue
  deploy:
    runs-on: ubuntu-latest
    needs: deploy_plan  # Ejecutar después de 'deploy_plan'
    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v2

      - name: Navegar a la carpeta infraestructure
        working-directory: ${{ github.workspace }}/infraestructure

      - name: Inicializar Terraform
        run: terraform init
        working-directory: ${{ github.workspace }}/infraestructure

      - name: Destruir la infraestructura existente (opcional)
        run: terraform destroy -auto-approve
        working-directory: ${{ github.workspace }}/infraestructure
      
      - name: Planificar la infraestructura
        run: terraform plan
        working-directory: ${{ github.workspace }}/infraestructure

      - name: Aplicar cambios en la infraestructura
        run: terraform apply -auto-approve
        working-directory: ${{ github.workspace }}/infraestructure
